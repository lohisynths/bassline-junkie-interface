if(MBED_DIR)
	set(REL_MBED_LOCATION ${MBED_DIR} "")
else()
	set(REL_MBED_LOCATION "mbed" CACHE INTERNAL "")
endif()


#message(CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR})
#message(CMAKE_COMMAND ${CMAKE_COMMAND})
#message(CMAKE_CURRENT_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
#message(CMAKE_CURRENT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
#message(CMAKE_CURRENT_LIST_FILE ${CMAKE_CURRENT_LIST_FILE})
#message(CMAKE_CURRENT_LIST_DIR ${CMAKE_CURRENT_LIST_DIR})
#message(CMAKE_CURRENT_LIST_LINE ${CMAKE_CURRENT_LIST_LINE})
#message(CMAKE_FILES_DIRECTORY ${CMAKE_FILES_DIRECTORY})
#message(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
#message(CMAKE_ROOT ${CMAKE_ROOT})
#message(PROJECT_NAME ${PROJECT_NAME})
#message(CMAKE_PROJECT_NAME ${CMAKE_PROJECT_NAME})
#message(PROJECT_BINARY_DIR ${PROJECT_BINARY_DIR})
#message(PROJECT_SOURCE_DIR ${PROJECT_SOURCE_DIR})




get_filename_component(REL_MBED_LOCATION ${REL_MBED_LOCATION} ABSOLUTE)
set(MBED_LOCATION ${REL_MBED_LOCATION} CACHE INTERNAL "")

set(TARGET_TRIPLET "arm-none-eabi")
message(STATUS "No TARGET_TRIPLET specified, using default: " ${TARGET_TRIPLET})

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_VERSION 1)

set(CMAKE_C_COMPILER ${TARGET_TRIPLET}-gcc CACHE INTERNAL "c compiler")
set(CMAKE_CXX_COMPILER ${TARGET_TRIPLET}-g++ CACHE INTERNAL "cxx compiler")
set(CMAKE_ASM_COMPILER ${TARGET_TRIPLET}-gcc CACHE INTERNAL "asm compiler")

set(CMAKE_OBJCOPY ${TARGET_TRIPLET}-objcopy CACHE INTERNAL "objcopy")
set(CMAKE_OBJDUMP ${TARGET_TRIPLET}-objdump CACHE INTERNAL "objdump")
set(CMAKE_SIZE ${TARGET_TRIPLET}-size CACHE INTERNAL "size")

set(CMAKE_C_FLAGS
	"-fbounds-check -D_GLIBCXX_DEBUG -fno-builtin -ffunction-sections -fdata-sections -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=softfp --specs=nosys.specs -D__MBED__=1 -DDEVICE_I2CSLAVE=1 -D__FPU_PRESENT=1 -DDEVICE_PORTOUT=1 -DUSBHOST_OTHER -DDEVICE_PORTINOUT=1 -DTARGET_RTOS_M4_M7 -DDEVICE_LOWPOWERTIMER=1 -DDEVICE_RTC=1 -DTOOLCHAIN_object -DDEVICE_SERIAL_ASYNCH=1 -DTARGET_STM32F4 -D__CMSIS_RTOS -D__CORTEX_M4 -DTOOLCHAIN_GCC -DDEVICE_I2C_ASYNCH=1 -DTARGET_CORTEX_M -DTARGET_LIKE_CORTEX_M4 -DTARGET_M4 -DTARGET_UVISOR_UNSUPPORTED -DDEVICE_SPI_ASYNCH=1 -DTARGET_STM32F411xE -DDEVICE_SERIAL=1 -DDEVICE_INTERRUPTIN=1 -DTARGET_CORTEX -DDEVICE_I2C=1 -DTRANSACTION_QUEUE_SIZE_SPI=2 -DTARGET_NUCLEO_F411RE -DDEVICE_STDIO_MESSAGES=1 -DTARGET_FF_MORPHO -DTARGET_FAMILY_STM32 -DTARGET_FF_ARDUINO -DDEVICE_PORTIN=1 -DTARGET_RELEASE -DTARGET_STM -DDEVICE_SERIAL_FC=1 -DMBED_BUILD_TIMESTAMP=1509999611.45 -DTARGET_LIKE_MBED -D__MBED_CMSIS_RTOS_CM -DDEVICE_SLEEP=1 -DTOOLCHAIN_GCC_ARM -DDEVICE_SPI=1 -DUSB_STM_HAL -DDEVICE_ERROR_RED=1 -DDEVICE_SPISLAVE=1 -DDEVICE_ANALOGIN=1 -DDEVICE_PWMOUT=1 -DTARGET_STM32F411RE -DARM_MATH_CM4 --include ${PROJECT_SOURCE_DIR}/mbed_config.h" CACHE INTERNAL "")

set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS} CACHE INTERNAL "")

set(LINKER_SCRIPT "${PROJECT_SOURCE_DIR}/STM32F411XE.ld")

set(CMAKE_EXE_LINKER_FLAGS "-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,__malloc_r -Wl,--wrap,__free_r -Wl,--wrap,__realloc_r -T ${LINKER_SCRIPT}" CACHE INTERNAL "")
set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" CACHE INTERNAL "")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE NEVER)
